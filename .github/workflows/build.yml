---
name: Build

on:
  push:
  pull_request:
  schedule:
    - cron: "0 0 * * 0"
  workflow_dispatch:

permissions:
  # Read commit contents
  contents: read

jobs:
  build:
    if: ${{ ! startsWith(github.ref, 'refs/tags/') }}
    runs-on: ubuntu-latest
    name: Python
    steps:
      - name: Set REPOSITORY
        shell: bash
        run: |
          set -euo pipefail
          IFS=$'\n\t'	
          echo "REPOSITORY=${GITHUB_REPOSITORY#*/}" >> "${GITHUB_ENV}"
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - name: Set SOURCE_DATE_EPOCH
        run: |
          set -euo pipefail
          IFS=$'\n\t'	
          echo "SOURCE_DATE_EPOCH=$(git log -1 --pretty=%ct)" >> "${GITHUB_ENV}"
      - name: Set up Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: "3.13"
          cache: "pip" # caching pip dependencies
      - name: Install Build
        shell: bash
        run: |
          set -euo pipefail
          IFS=$'\n\t'
          pipx ensurepath
          pipx install build==1.3.0
          if pipx upgrade build | tee -a /dev/stderr | grep -q -e '^upgraded '; then
            exit 1
          fi
      - name: Build with Python
        shell: bash
        run: |
          set -euo pipefail
          IFS=$'\n\t'
          pipx run build
      - name: Upload artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: ${{ env.REPOSITORY }}
          path: dist/
